# Generated by Django 3.1.4 on 2022-04-12 01:57

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Areas',
            fields=[
                ('codigo', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('tasa_dolar', models.FloatField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='Equipos',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('unidad', models.CharField(blank=True, default='', max_length=6)),
                ('depreciacion', models.FloatField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Equipo',
                'verbose_name_plural': 'Equipos',
            },
        ),
        migrations.CreateModel(
            name='Materiales',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('cod_mat', models.CharField(blank=True, default='', max_length=6)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('unidad', models.CharField(blank=True, default='', max_length=6)),
                ('depreciacion', models.FloatField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materiales',
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('unidad', models.CharField(blank=True, default='', max_length=6)),
            ],
            options={
                'verbose_name': 'Personal',
                'verbose_name_plural': 'Personal',
            },
        ),
        migrations.CreateModel(
            name='Partidas',
            fields=[
                ('codigo', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, default='', max_length=115)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('unidad', models.CharField(blank=True, default='', max_length=6)),
                ('rendimiento', models.FloatField(blank=True, default=1)),
                ('equipos', models.ManyToManyField(to='app.Equipos')),
                ('materiales', models.ManyToManyField(to='app.Materiales')),
                ('personal', models.ManyToManyField(to='app.Personal')),
            ],
            options={
                'verbose_name': 'Partida',
                'verbose_name_plural': 'Partidas',
            },
        ),
        migrations.CreateModel(
            name='Obras',
            fields=[
                ('codigo', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('descripcion', models.TextField(blank=True, default='')),
                ('bono_alimentacion', models.FloatField(blank=True, default=0)),
                ('f_administracion', models.FloatField(blank=True, default=0)),
                ('f_utilidad', models.FloatField(blank=True, default=0)),
                ('grado_dificultad', models.FloatField(blank=True, default=0)),
                ('tarifa_transforte', models.FloatField(blank=True, default=0)),
                ('fcas', models.FloatField(blank=True, default=0)),
                ('iva', models.FloatField(blank=True, default=0)),
                ('area', models.ForeignKey(default=None, on_delete=django.db.models.deletion.SET_DEFAULT, to='app.areas')),
                ('partidas', models.ManyToManyField(to='app.Partidas')),
            ],
            options={
                'verbose_name': 'Obra',
                'verbose_name_plural': 'Obras',
            },
        ),
        migrations.CreateModel(
            name='CantidadMateriales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=1)),
                ('material', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.materiales')),
                ('partida', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.partidas')),
            ],
            options={
                'verbose_name': 'CantidadMateriales',
                'verbose_name_plural': 'CantidadMateriales',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=80)),
                ('apellido', models.CharField(max_length=80)),
                ('num_tlf', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
